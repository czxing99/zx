<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zx.autoCoder.dao.MySqlMapper" >
    <resultMap id="BaseResultMap" type="com.zx.autoCoder.po.TableName" >
        <id column="table_Name" property="tableName" jdbcType="VARCHAR" />
        <result column="table_type" property="tableType" jdbcType="VARCHAR" />
    </resultMap>
    <resultMap id="ColumnMap" type="com.zx.autoCoder.po.ColumnName">
        <id column="id" property="id" jdbcType="VARCHAR" />
        <result column="name1" property="name" jdbcType="INTEGER"/>
        <result column="type1" property="type" jdbcType="VARCHAR"/>
        <result column="length1" property="length" jdbcType="INTEGER"/>
        <result column="isKey1" property="isKey" jdbcType="BOOLEAN"/>
        <result column="comment1" property="comment" jdbcType="VARCHAR"/>
        <result column="isDataColumn1" property="isDataColumn" jdbcType="BOOLEAN"/>
    </resultMap>

    <update id="alterTableName">
        alter table ${originalTableName} rename ${newTableName}
    </update>

    <update id="truncateTable">
        truncate table ${tableName}
    </update>

    <update id="createNewTableAndInsertData">
        create table ${newTableName} as select * from ${originalTableName}
    </update>
    <update id="createDdl">
        ${ddl}
    </update>

    <select id="getRecordCount" resultType="int">
        select count(1) from ${tableName}
    </select>

    <select id="getCurDataBaseName" resultType="string">
        select database();
    </select>

    <select id="isTargetTableExistInDB" resultType="string">
        SELECT table_name FROM information_schema.tables WHERE table_schema = #{dataBaseName} and TABLE_NAME = #{tableName}
    </select>

    <select id="getAll" resultMap="BaseResultMap">
        select table_Name ,table_type from information_schema.tables where table_type = 'BASE TABLE' and table_schema = 'dbtrain1'
    </select>
    <select id="getAllAsPostgres" resultMap="BaseResultMap">
        select  table_Name ,table_type from information_schema.tables where table_catalog  = 'dbtrain1' and table_schema = 'public'
    </select>
   <select id="getTableColumn" resultMap="ColumnMap">
       select ordinal_position id,
            column_name name1,
            data_type type1,
            ifnull(character_maximum_length,0) length1,
            case when  length(column_key)> 0 then true else false end isKey1 ,
            column_comment comment1,
            true isDataColumn1
            from information_schema.columns where lower(table_name)  = #{tableName}
    </select>

</mapper>